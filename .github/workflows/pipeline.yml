name: Build

on:
  push:
    branches: [ main, develop, release/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      branch: ${{ github.head_ref || github.ref_name }} 

    outputs:
      semVer: ${{ steps.set_semver.outputs.semVer }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Fetch unshallow
      run: git fetch --prune --tags --unshallow
    - name: Install GitVersion 
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
    - name: Output semver
      id: set_semver
      run: |
        if [[ ${{ env.branch }} == 'main' ]];
        then
          echo "::set-output name=semVer::$GitVersion_MajorMinorPatch"
        else
          echo "::set-output name=semVer::$GitVersion_SemVer"
        fi
    - name: Build
      run: dotnet build --no-restore
    - name: Publish
      run: |
        dotnet publish src/KindxtApp/Kindxt.csproj -c Release --self-contained true /p:PublishSingleFile=true /p:AssemblyVersion="$GitVersion_AssemblySemVer" /p:Version="${{ steps.set_semver.outputs.semVer }}" /p:AssemblyFileVersion="$GitVersion_AssemblySemFileVer"  /p:AssemblyInformationalVersion="$GitVersion_InformationalVersion" -r win-x64 -o publish
    - name: Zip Content
      run: |
        zip -r kindxt-windows-${{ steps.set_semver.outputs.semVer }}.zip publish
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: kindxt-windows-${{ steps.set_semver.outputs.semVer }}
        path: kindxt-windows-${{ steps.set_semver.outputs.semVer }}.zip
        if-no-files-found: error

  release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    env:
      branch: ${{ github.head_ref || github.ref_name }} 
      version: ${{ needs.build.outputs.semVer }}
      tag: v${{ needs.build.outputs.semVer }}
      windows_package_name: 'kindxt-windows-${{ needs.build.outputs.semVer }}'

    steps:
    - uses: actions/checkout@v2
    - name: Fetch unshallow
      run: git fetch --prune --tags --unshallow
    - name: 'Download windows artifact'
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.windows_package_name }}
        path: ${{ runner.temp }}
    - name: Get Last Tag
      id: get_last_tag
      run: |
        last_tag=git tag  | grep -E '^v[0-9]' | sort -V | tail -1
        echo "::set-output name=last_tag::$last_tag"
        echo $last_tag
    - name: Update CHANGELOG
      id: changelog
      uses: Requarks/changelog-action@v1
      with:
        token: ${{ github.token }}
        tag: ${{ steps.get_last_tag.outputs.last_tag }}

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        prerelease:  ${{ env.branch != 'main' }}
        allowUpdates: true
        draft: false
        tag: ${{ env.tag }}
        name: kindxt-${{ env.version}}
        body: ${{ steps.changelog.outputs.changes }}
        token: ${{ github.token }}

    - name: Commit CHANGELOG.md
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: ${{ env.branch }}
        commit_message: 'docs: update CHANGELOG.md for ${{ env.tag }} [skip ci]'
        file_pattern: CHANGELOG.md
    - name: Upload release windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ runner.temp }}/${{ env.windows_package_name }}.zip
        asset_name: ${{ env.windows_package_name }}.zip
        asset_content_type: application/zip